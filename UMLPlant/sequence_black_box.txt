@startuml
actor User1 as User
participant "Chat Agent" as chatAgent
actor "Network" as Network
actor "Clock" as Clock

User -> chatAgent ++ : Opens Agent
chatAgent -> Network ++ : getConnectedUserList()
Network -> chatAgent -- : user_list
chatAgent -> User -- : Shows UI :\nUsername Input
User -> chatAgent ++ : Logins as "name"
loop if !isUsernameValid
alt name available
chatAgent -> chatAgent : isUsernameValid = True
User <- chatAgent : Shows Connected User List
    else name already taken
User <- chatAgent -- : Shows invalid input message
    end
end

User -> chatAgent ++ : Starts Chatting Session\nwith User2
  chatAgent -> Network ++ : retrieveHistory(User2)
  Network -> chatAgent -- : history_user2
chatAgent -> User -- : Shows UI :\nChat window with conversation history

User -> chatAgent ++ : Sends Message M1
  chatAgent -> Clock ++ : getTime()
  Clock -> chatAgent -- : current_time
  chatAgent -> Network : sendMessage(User2,M1)
  chatAgent -> Network : updateHistory(User2,M1)
chatAgent -> User -- : Shows UI :\n Updated chat with new message

Network -> chatAgent ++ : Receive Messsage M2
chatAgent -> User -- : Shows UI :\n Updated chat with new message

User -> chatAgent : Closes Chatting Session

Network -> chatAgent ++ : Receive Messsage M3 from User3
  chatAgent -> Network ++ : retrieveHistory(User3) 
  Network -> chatAgent -- : history_user3
chatAgent -> User -- : Shows UI :\n Updated chat\nwith history and new message

User -> chatAgent ++ : Closes Agent
  chatAgent -> Network : notifyUsers()
chatAgent -> User -- : Closes UI
@enduml